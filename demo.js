// Generated by CoffeeScript 1.10.0
var productList;

productList = [
  {
    title: '年終大促'
  }, {
    title: '母嬰節'
  }, {
    title: '蝴蝶節'
  }, {
    title: '海外購321'
  }, {
    title: '春茶節'
  }, {
    title: '全球購415'
  }, {
    title: '京范兒'
  }, {
    title: '車管家'
  }, {
    title: '京東618'
  }, {
    title: '最美採購'
  }, {
    title: '金秋風暴'
  }, {
    title: '3C數碼節'
  }, {
    title: '我的全球購'
  }, {
    title: 'JD Collection'
  }, {
    title: '設計邦'
  }, {
    title: '家裝節'
  }, {
    title: '國家館'
  }, {
    title: '數碼音頻節'
  }, {
    title: 'IT數碼頻道'
  }, {
    title: '京東11.11'
  }
];

$(function() {
  var $bg, $container, $inner, $plane, $planeContent, $text, $textContainer, $textInner, $textPlane, $title, $wrapper, angleOffset, angleRange, h, i, j, planeCount, planeList, pos, r, ref, rotate, scrollBar, scrollHeight, textPlaneList;
  planeCount = productList.length;
  r = 1200;
  scrollHeight = 4000;
  $wrapper = $('#wrapper');
  $container = $('<div class="container"><div class="inner-container"></div></div>');
  $inner = $container.find('.inner-container');
  $container.appendTo($wrapper);
  $textContainer = $('<div class="text-container"><div class="inner-container"></div></div>');
  $textInner = $textContainer.find('.inner-container');
  $textContainer.appendTo($wrapper);
  $title = $('<div class="title-wrapper"><h1>2016</h1></div>');
  $title.prependTo($container);
  planeList = [];
  textPlaneList = [];
  for (i = j = 0, ref = planeCount; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
    h = Math.round(360 / planeCount * i);
    pos = 360 / planeCount * i;
    $plane = $('<div class="plane"></div>').css({
      width: '300px',
      height: '200px',
      'margin-top': '-100px',
      'margin-left': '-150px',
      transform: "rotateX(" + pos + "deg) translate3d(0px, 0px, " + r + "px)"
    });
    $bg = $('<div class="plane-bg"></div>');
    $bg.appendTo($plane);
    $planeContent = $('<div class="plane-content"></div>').css({
      'background-color': "hsl(" + h + ", 50%, 60%)"
    }).data({
      pos: 360 - pos
    });
    $planeContent.appendTo($bg);
    $textPlane = $('<div class="plane"></div>').css({
      width: '300px',
      height: '200px',
      'margin-top': '-100px',
      'margin-left': '-150px',
      transform: "rotateX(" + pos + "deg) translate3d(0px, 0px, " + (r * 1.3) + "px)"
    });
    $text = $("<div class=\"plane-text-wrapper\">" + productList[i].title + "</div>");
    $text.appendTo($textPlane);
    planeList.push({
      $el: $bg,
      pos: 360 - pos
    });
    textPlaneList.push({
      $el: $text,
      pos: 360 - pos
    });
    $plane.appendTo($inner);
    $textPlane.appendTo($textInner);
  }
  angleRange = 30;
  angleOffset = 0;
  rotate = function(angle) {
    $inner.css({
      transform: "rotateX(" + angle + "deg)"
    });
    $textInner.css({
      transform: "rotateX(" + angle + "deg)"
    });
    $.each(planeList, function(i, plane) {
      var absRange, range, scale;
      range = angle + angleOffset - plane.pos;
      absRange = Math.min(Math.abs(angle + angleOffset - plane.pos), Math.abs(angle - 360 + angleOffset - plane.pos), Math.abs(angle + 360 + angleOffset - plane.pos)) / angleRange;
      scale = 1 - Math.pow(absRange, 2);
      if (scale < 0) {
        scale = 0;
      }
      if (absRange > 1) {
        return plane.$el.css({
          transform: 'rotateY(-90deg) rotateZ(0deg)'
        });
      } else {
        return plane.$el.css({
          transform: "rotateY(" + (-90 + 90 * scale) + "deg) rotateZ(" + (-45 * scale) + "deg)"
        });
      }
    });
    return $.each(textPlaneList, function(i, plane) {
      var absRange, range, scale;
      range = angle + angleOffset - plane.pos;
      absRange = Math.min(Math.abs(angle + angleOffset - plane.pos), Math.abs(angle - 360 + angleOffset - plane.pos), Math.abs(angle + 360 + angleOffset - plane.pos)) / angleRange;
      scale = 1 - absRange;
      return plane.$el.css({
        transform: "translate3d(" + 0. + "px, " + 0. + "px, " + 0. + "px) rotateX(" + (-range) + "deg) rotateY(" + 60. + "deg) rotateZ(0deg)",
        opacity: scale
      });
    });
  };
  scrollBar = new InfiniteScroll($('.module-wrapper')[0], scrollHeight, function(progress) {
    return rotate(progress * 360);
  }, {
    highExpand: 1000
  });
  return $container.delegate('.plane-content', 'click', function(e) {
    var progress;
    progress = $(this).data('pos') / 360;
    return scrollBar.travelTo({
      progress: progress
    }, function() {
      return console.log('ok');
    });
  });
});
